metrics:
- labels:
    type:
      regex: .*[|]Successfully connected ([^.]+)[.].*
  name: nina_equipment
  rules:
  - op: set
    regex: ^.*Successfully connected.*
    value: 1
  type: gauge
- labels:
    type:
      regex: .*[|]Disconnected (.+)$
  name: nina_equipment
  rules:
  - op: set
    regex: .*[|]Disconnected .*
    value: 0
  type: gauge
- labels:
    category:
      regex: ".*Category: ([^,]+),.*"
    item:
      regex: ".*Item: (.+)$"
  name: nina_status
  rules:
  - op: set
    regex: .*[|]Run[|].*Starting Category.*
    value: 1
  type: gauge
- labels:
    category:
      regex: ".*Category: ([^,]+),.*"
    item:
      regex: ".*Item: (.+)$"
  name: nina_status
  rules:
  - op: set
    regex: .*[|]Run[|].*Finishing Category.*
    value: 0
  type: gauge
- labels:
    time:
      regex: ".*Exposure Time:? ([^;]*);"
    filter:
      regex: ".*Filter:? ([^;]*);"
    gain:
      regex: ".*Gain:? ([^;]*);"
    offset:
      regex: ".*Offset:? ([^;]*);"
    binning:
      regex: ".*Binning:? ([^;]*);"
  name: nina_exposure
  rules:
  - op: inc
    regex: .*[|]Capture[|].*Starting Exposure.*
  type: counter
- labels:
    type:
      value: HFR
  name: nina_detect
  rules:
  - op: set
    regex: ".*[|]Detect[|].*Average HFR: ([^,]+),.*"
  type: gauge
- labels:
    type:
      value: stars
  name: nina_detect
  rules:
  - op: set
    regex: .*[|]Detect[|].*Detected Stars ([0-9]+)$
  type: gauge
- labels:
    module:
      regex: .*[|]ERROR[|]([^|]+)[|].*
    type:
      regex: .*[|]ERROR[|][^|]+[|]([^|]+)[|].*
    code:
      regex: .*[|]ERROR[|].* ([^ ]+)$
  name: nina_error
  rules:
  - op: inc
    regex: .*[|]ERROR[|].*
  type: counter
